package com.exprivia.dfda.tia.model;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonAlias;

import lombok.Data;
import lombok.NonNull;

@Data
public class KeywordDictionary {
    // if id is null, during creation a uuid will be assigned
    private String id;
    @NonNull
    private String name;
    @NonNull
    private String shortName;

    private Comments _comments;

    @NonNull
    private KeywordDictionaryDefinition dictionaryDefinition;

    public KeywordDictionary() {
    }

    @Data
    public static class KeywordDictionaryDefinition {
        @NonNull
        private List<String> keywords;
        private boolean skipKeywords = false;
        private List<KeywordDictionaryDefinition> children;

        public KeywordDictionaryDefinition() {
            keywords = new ArrayList<>();
            skipKeywords = false;
            children = new ArrayList<>();
        }

        public KeywordDictionaryDefinition(String keyword) {
            this(keyword, false);
        }

        public KeywordDictionaryDefinition(List<String> keywords) {
            this(keywords, false);
        }

        public KeywordDictionaryDefinition(List<String> keywords, List<KeywordDictionaryDefinition> children) {
            this(keywords, false, children);
        }

        public KeywordDictionaryDefinition(String keyword, boolean skipKeywords) {
            this.keywords = Arrays.asList(keyword);
            this.skipKeywords = skipKeywords;
            this.children = new ArrayList<>();
        }

        public KeywordDictionaryDefinition(List<String> keywords, boolean skipKeywords) {
            this.keywords = keywords;
            this.skipKeywords = skipKeywords;
            this.children = new ArrayList<>();
        }

        public KeywordDictionaryDefinition(List<String> keywords, boolean skipKeywords, List<KeywordDictionaryDefinition> children) {
            this.keywords = keywords;
            this.skipKeywords = skipKeywords;
            this.children = children;
        }
    }

    @Data
    protected static class Comments {
        @JsonAlias("generated by")
        private String generatedBy;

        @JsonAlias("generation time")
        private Date generationTime;
    }
}
